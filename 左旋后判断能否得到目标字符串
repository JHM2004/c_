
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>


int string_rotate(char* p, char*p1)
{
	int i = 0;
	int n = strlen(p);
	for (i = 0; i < n; i++)
	{
		//一次左旋：
		char ret = *p;
		int j = 0;
		for (j = 0; j <n - 1; j++)
		{
			*(p + j) = *(p + j + 1);
		}
		*(p + n - 1) = ret;
		if (strcmp(p, p1) == 0)
		{
			return 1;
		}
	}
	return 0;
}

int main()
{
	char arr1[10] = "ABCDEF";
	char arr2[10] = "ABCDEF";
	int ret=string_rotate(arr1,arr2);
	if (ret == 1)
	{
		printf("找到了\n");
	}
	else
	{
		printf("找不到\n");
	}
	return 0;
}


法二：（练习使用库函数strncat与strstr）来操作：
//#define _CRT_SECURE_NO_WARNINGS
//#include<stdio.h>
//#include<string.h>
//使用库函数strcat与strncat：
//int main()
//{
//	char arr[10] = "abcd";
//	strcat(arr, "efgh");
//	printf("%s", arr);
//	return 0;
//}

//int main()
//{
//	char arr[10] = "abcd";
//	strncat(arr, arr,4);
//	printf("%s", arr);
//	return 0;
//}


//判断一个字符串是否是另一个字符串旋转而来的：
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>

int panduan(char* arr1, char* arr2)
{	if (strlen(arr1)/2 != (strlen(arr2)))
	{
		return 0;
	}
	char* ret = strstr(arr1, arr2);

	if (ret == NULL)
	{
		return 0;
	}
	else
	{
		return 1;
	}
}

int main()
{
	char arr1[20] = "abcdef";
	char arr2[20] = "abcdef";
	strncat(arr1, arr1, 6);
	int ret= panduan(arr1, arr2);
	if (ret == 0)
	{
		printf("不是\n");
	}
	else
	{
		printf("是\n");
	}
	return 0;
}
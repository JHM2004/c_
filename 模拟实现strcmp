模拟实现strcmp: 
一代：
#include<stdio.h>
#include<assert.h>
int my_strcmp(const char* p1, const char* p2)
{
	assert(p1 && p2);
	while (*p1 == *p2)
	{
		if (*p1 == '\0')
		{
			return 0;
		}
		p1++;
		p2++;
	}
	if (*p1 < *p2)
	{
		return -1;
	}
	else
	{
		return 1;
	}
}

int main()
{
	char *p1 = "abcdef";
	char* p2 = "obcdef";
	int ret = my_strcmp(p1, p2);
	if (ret == 0)
	{
		printf("p1=p2");
	}
	else if (ret < 0)
	{
		printf("p1<p2");
	}
	else
	{
		printf("p1>p2");
	}
	return 0;
}

二代：
#include<stdio.h>
#include<assert.h>
int my_strcmp(const char* p1, const char* p2)
{
	assert(p1 && p2);
	while (*p1 == *p2)
	{
		if (*p1 == '\0')
		{
			return 0;
		}
		p1++;
		p2++;
	}
	return *p1 - *p2;
}

int main()
{
	char* p1 = "abcdef";
	char* p2 = "obcdef";
	int ret = my_strcmp(p1, p2);
	if (ret == 0)
	{
		printf("p1=p2");
	}
	else if (ret < 0)
	{
		printf("p1<p2");
	}
	else
	{
		printf("p1>p2");
	}
	return 0;
}